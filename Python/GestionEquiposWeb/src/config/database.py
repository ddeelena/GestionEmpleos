from typing import Any
import mysql.connector
from mysql.connector import Error
from mysql.connector.cursor import MySQLCursor

class DatabaseConnection:
    """Clase para gestionar la conexi√≥n a la base de datos"""
    _instance = None

    def __new__(cls) -> 'DatabaseConnection':
        """Implementa el patr√≥n Singleton"""
        if cls._instance is None:
            cls._instance = super().__new__(cls)
        return cls._instance

    def __init__(self) -> None:
        """Inicializa las credenciales de conexi√≥n y establece la conexi√≥n"""
        if not hasattr(self, "conn") or self.conn is None:
            self.config = {
                'host': 'localhost',
                'user': 'root',
                'password': 'Naranjo_0312',
                'database': 'inventario'
            }
            self.conn = None
            self.cursor = None
            self.connect()  # üîπ Intentar conectar en la inicializaci√≥n

    def connect(self) -> None:
        """Establece la conexi√≥n con la base de datos"""
        try:
            print("üîÑ Intentando conectar a MySQL...")  # Depuraci√≥n
            self.conn = mysql.connector.connect(**self.config)

            if self.conn.is_connected():
                self.cursor = self.conn.cursor(dictionary=True)
                print("‚úÖ Conexi√≥n exitosa.")  # Depuraci√≥n
            else:
                print("‚ö†Ô∏è No se pudo conectar a MySQL.")  # Depuraci√≥n
                self.conn = None
                self.cursor = None

        except Error as e:
            print(f"‚ùå Error al conectar a MySQL: {e}")
            self.conn = None
            self.cursor = None  # Para evitar problemas

    def disconnect(self) -> None:
        """Cierra la conexi√≥n con la base de datos"""
        if self.conn and self.conn.is_connected():
            if self.cursor:
                self.cursor.close()
            self.conn.close()
            print("üîå Conexi√≥n cerrada.")  # Depuraci√≥n

    def get_cursor(self) -> MySQLCursor:
        """Retorna el cursor asegurando que la conexi√≥n est√° activa"""
        if not self.conn or not self.conn.is_connected():
            print("üîÑ Conexi√≥n no encontrada. Intentando reconectar...")
            self.connect()

        if self.cursor is None:
            raise Exception("‚ùå Error: No se pudo obtener un cursor.")

        return self.cursor

    def commit(self) -> None:
        """Confirma los cambios en la base de datos"""
        if not self.conn or not self.conn.is_connected():
            print("‚ö† Conexi√≥n perdida. Intentando reconectar...")
            self.connect()
        
        if self.conn and self.conn.is_connected():
            self.conn.commit()
        else:
            raise Exception("‚ùå No se pudo confirmar la transacci√≥n porque no hay conexi√≥n con la base de datos.")

